unit MSG;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, ShellAPI, Vcl.ComCtrls;

type
  TForm1 = class(TForm)
    ListBox1: TListBox;
    Label1: TLabel;
    Button1: TButton;
    Button2: TButton;
    Label2: TLabel;
    Edit1: TEdit;
    Button3: TButton;
    Button4: TButton;
    ProgressBar1: TProgressBar;
    procedure Button1Click(Sender: TObject);
    procedure ScanNet();
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button4Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

{Процедура сканирования сетевого окружения
Результат сканирования записываем в файл msg.cfg}
procedure TForm1.Button2Click(Sender: TObject);
Var i:integer;
    s:string;
begin
  for i:=0 to ListBox1.Items.Count-1 do
    if ListBox1.Selected[i] then
      begin
        //Создание запроса в cmd
        s:='cmd /c msg * /server:'+TrimRight(ListBox1.Items[i])+' '+Trim(Edit1.Text);
        //В этом месте WinExec по какой-то причине не отработал правильно, используем ShellExecute
        ShellExecute(Handle, nil, 'cmd.exe', PChar(s), nil, SW_HIDE);
      end;
  {//Создание запроса в cmd
  s:='cmd /c msg * /server:'+TrimRight(ListBox1.Items[0])+' '+Trim(Edit1.Text);
  //debug функция
  label3.Caption:=s+inttostr(s.Length);
  //В этом месте WinExec по какой-то причине не отработал правильно, используем ShellExecute
  ShellExecute(Handle, nil, 'cmd.exe', PChar(s), nil, SW_HIDE);}
end;

//Выделяем все строки списка
procedure TForm1.Button3Click(Sender: TObject);
var i:integer;
begin
  for i:=0 to ListBox1.Items.Count-1 do
    ListBox1.Selected[i]:=True;
end;

//Снимаем выделение со всех строк списка
procedure TForm1.Button4Click(Sender: TObject);
var i:integer;
begin
  for i:=0 to ListBox1.Items.Count-1 do
    ListBox1.Selected[i]:=False;
end;

procedure TForm1.ScanNet();
var s:string;
    i:integer;
begin
  //Очищаем список
  ListBox1.Items.Clear;
  //Выгружаем сетевое окружение в файл
  WinExec(PAnsiChar('cmd /c net view>msg.cfg'),SW_HIDE);
  //Загрузка из сгенерированного файла строк
  //Если файл ещё не успел создасться, ожидаем секунду и пробуем снова
  if FileExists('msg.cfg') then
    ListBox1.Items.LoadFromFile('msg.cfg')
  Else
  Begin
    Sleep(1000);
    ListBox1.Items.LoadFromFile('msg.cfg')
  End;
  //Удаляем первые три строки, они лишние
  ListBox1.Items.Delete(0);
  ListBox1.Items.Delete(0);
  ListBox1.Items.Delete(0);
  //Удаляем последние две строки, они тоже лишние и полезной нагрузки не несут
  ListBox1.Items.Delete(ListBox1.Items.Count-1);
  ListBox1.Items.Delete(ListBox1.Items.Count-1);
  //Перебираем все пункты списка
  for i:=0 to ListBox1.Items.Count-1 do
    begin
      //Сохраняем значение из списка в стрококвую переменную
      s:=ListBox1.Items[i];
      //Удалить первые два символа строки
      Delete(s,1,2);
      //Удалить искомый пункт списка
      ListBox1.Items.Delete(i);
      //Вставить вместо него исправленный
      ListBox1.Items.Insert(i,s);
    end;
end;

procedure TForm1.Button1Click(Sender: TObject);
begin
  //Выполняем процедуру выгрузки сетевого окружения
  ScanNet;
end;

end.
